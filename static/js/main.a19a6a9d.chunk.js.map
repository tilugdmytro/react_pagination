{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pageNumbers","totalPages","Math","ceil","nextPageDisabled","prevPageDisabled","i","push","className","cn","disabled","href","onClick","map","number","active","items","from","to","numbers","n","getNumbers","options","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","indexOfFirstItem","indexOfLastItem","length","visibleItems","slice","id","value","onChange","event","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAW1C,IANK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAc,GACdC,EAAaC,KAAKC,KAAKP,EAAQC,GAC/BO,EAAmC,IAAhBN,EACnBO,EAAmBP,IAAgBG,EAEhCK,EAAI,EAAGA,GAAKL,EAAYK,GAAK,EACpCN,EAAYO,KAAKD,GAenB,OACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUN,IAA3C,SACE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeP,EACfQ,QAdgB,WACF,IAAhBd,GACFC,EAAaD,EAAc,IAOzB,oBAWDE,EAAYa,KAAI,SAACC,GAAD,OACf,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQjB,IAAgBgB,IAFvD,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMb,EAAae,IAJ9B,SAMGA,KATEA,MAcT,oBAAIN,UAAWC,IAAG,YAAa,CAAEC,SAAUL,IAA3C,SACE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAhDgB,WAClBd,IAAgBG,GAClBF,EAAaD,EAAc,IAyCzB,wBC9DFkB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQZ,KAAKa,GAGf,OAAOD,EDDKE,CAAW,EAAG,IAAIR,KAAI,SAACO,GAAD,qBAAeA,MAE7CE,EAAU,CAAC,EAAG,EAAG,GAAI,IAEdC,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB2B,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,GAAoB9B,EAAc,GAAK4B,EACvCG,EAAkB/B,EAAc4B,EAAeV,EAAMc,OACvDhC,EAAc4B,EACdV,EAAMc,OACJC,EAAef,EAAMgB,MAAMJ,EAAkBC,GAOnD,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWV,EADX,mBAEI8B,EAAmB,EAFvB,cAGQC,EAHR,eAG8Bb,EAAMc,OAHpC,OAMA,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRyB,GAAG,kBACHzB,UAAU,eACV0B,MAAOR,EACPS,SAtBa,SAACC,GACtBT,GAAiBS,EAAMC,OAAOH,OAC9BT,EAAe,IAeT,SAOGH,EAAQT,KAAI,SAACyB,GAAD,OACX,wBAAQJ,MAAOI,EAAf,SACGA,GADyBA,UAOlC,uBAAOC,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MAAOoB,EAAMc,OACbjC,QAAS6B,EACT5B,YAAaA,EACbC,aAAc0B,IAGhB,6BACGM,EAAalB,KAAI,SAAC2B,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YE/DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a19a6a9d.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (value: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageNumbers = [];\n  const totalPages = Math.ceil(total / perPage);\n  const nextPageDisabled = currentPage === 1;\n  const prevPageDisabled = currentPage === totalPages;\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    pageNumbers.push(i);\n  }\n\n  const onNextPageClick = () => {\n    if (currentPage !== totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const onPrevPageClick = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: nextPageDisabled })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={nextPageDisabled}\n          onClick={onPrevPageClick}\n        >\n          «\n        </a>\n\n      </li>\n      {pageNumbers.map((number) => (\n        <li\n          key={number}\n          className={cn('page-item', { active: currentPage === number })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${number}`}\n            onClick={() => onPageChange(number)}\n          >\n            {number}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', { disabled: prevPageDisabled })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={prevPageDisabled}\n          onClick={onNextPageClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nconst options = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const indexOfFirstItem = (currentPage - 1) * itemsPerPage;\n  const indexOfLastItem = currentPage * itemsPerPage < items.length\n    ? currentPage * itemsPerPage\n    : items.length;\n  const visibleItems = items.slice(indexOfFirstItem, indexOfLastItem);\n\n  const onOptionChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${\n          indexOfFirstItem + 1\n        } - ${indexOfLastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={onOptionChange}\n          >\n            {options.map((option) => (\n              <option value={option} key={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {visibleItems.map((item) => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}